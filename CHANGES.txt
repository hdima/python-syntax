Revision 3.6.0 (2015-11-XX):

    - Fix 'async def' highlighting. Patch by Joongi Kim
    - Add dummy 'pythonInclude' group to avoid crashing standard pyrex.vim.
      Patch by Antony Lee

Revision 3.5.0 (2015-06-10):

    - Add support for 'async ...' and 'await' keywords introduced in
      Python 3.5. Patch by Ihor Gorobets

Revision 3.3.7 (2014-12-27):

    - Add support for Python 3 non-ASCII decorator names.
      Patch by Victor Salgado

Revision 3.3.6 (2013-11-18):

    - Highlight 'yield from' statement introduced in Python 3.3. Reported by
      Elizabeth Myers.

Revision 3.3.5 (2013-08-31):

    - Highlight 'import', 'from' and 'as' as include statements.
      Patch by David Briscoe
    - Added new option 'python_highlight_file_headers_as_comments' (disabled by
      default) to highlight shebang and coding file headers as comments.
      Proposed by David Briscoe.

Revision 3.3.4 (2013-08-11):

    - Highlight True and False as booleans. Patch by Yuri Habrusiev.

Revision 3.3.3 (2013-06-02):

   - More lightweight syntax reloading. Patch by Will Gray.

Revision 3.3.2 (2013-06-01):

   - Fixed behaviour of b:python_version_2 variable. Reported by Will Gray.

Revision 3.3.1 (2013-05-12):

   - The script was moved to its own repository at
     https://github.com/hdima/python-syntax

Revision 3.3.0 (2013-03-10):

    - Merge Python 2 and Python 3 script versions into the single python.vim
      script

Revision 3.0.7 (2012-02-11):

    - Updated email and URL

Revision 2.6.7 (2012-02-11):

    - Updated email and URL

Revision 3.0.6 (2010-11-14):

    - Fixed highlighting for str.format syntax. Patch by Anton Butanaev.

Revision 3.0.5 (2010-11-11):

    - Fixed highlighting for bytes. Patch by Anton Butanaev.
    - Fixed highlighting for numbers.

Revision 3.0.4 (2010-11-09):

    - Fixed highlighting for raw bytes literals. Patch by Anton Butanaev.

Revision 3.0.3 (2010-04-09):

    - Applied patch by Andrea Riciputi with new configuration options
      "python_highlight_builtin_objs" and "python_highlight_builtin_funcs"

Revision 3.0.2 (2009-07-24):

    - Applied patch by Caleb Adamantine which fixes highlighting for decorators

Revision 3.0.1 (2009-05-03):

    - Fixed compatibility with pyrex.vim

Revision 3.0.0 (2008-12-07):

    - Added support for non-ASCII identifiers;
    - Added support for new text strings and binary data (bytes);
    - Updated support for numeric literals;
    - Updated support for str.format;
    - Added new builtins introduced in Python 2.6: "ascii", "exec",
      "memoryview", "print";
    - Added new keyword "nonlocal";
    - Removed exception "StandardError";
    - Removed builtins: "apply", "basestring", "buffer", "callable", "coerce",
      "execfile", "file", "help", "intern", "long", "raw_input", "reduce",
      "reload", "unichr", "unicode", "xrange";

Revision 2.6.6 (2010-04-09):

    - Applied patch by Andrea Riciputi with new configuration options
      "python_highlight_builtin_objs" and "python_highlight_builtin_funcs"

Revision 2.6.5 (2009-07-24):

    - Applied patch by Caleb Adamantine which fixes highlighting for decorators

Revision 2.6.4 (2009-05-03):

    - Fixed compatibility with pyrex.vim

Revision 2.6.3 (2008-09-29):

    - Return back trailing 'L' support for numbers. Actually it was changed for
      future Python 3.0 syntax but in wrong file;

Revision 2.6.2 (2008-09-22):

    - Added "VMSError" exception;
    - Added support for b"..." syntax;
    - Added support for str.format brace escaping;

Revision 2.6.1 (2008-09-21):

    - Added new builtins and exceptions introduced in Python 2.6: "bin",
      "bytearray", "bytes", "format", "next", "BufferError", "BytesWarning";
    - Added builtin "__debug__";
    - Added global variables: "__doc__", "__file__", "__name__", "__package__";
    - Removed "OverflowWarning" (removed in Python 2.5);
    - Added option "python_print_as_function" for highlight "print" as a
      function;
    - Added support for new integer literal syntax "0o" and "0b";
    - Added support for string.Template syntax controlled by
      "python_highlight_string_templates" option;
    - Added support for str.format syntax controlled by
      "python_highlight_string_format" option;
    - Removed highlighting for "--" and "++" because it's a valid Python
      expressions which can be interpreted as "a + +b";

Revision 2.5.6 (2007-02-04):

    - Applied patch by Pedro Algarvio to enable spell checking only for
      the right spots (strings and comments);

Revision 2.5.5 (2006-09-26):

    - added new warnings (ImportWarning, UnicodeWarning)
      introduced in Python 2.5;

Revision 2.5.4 (2006-05-11):

    - added highlighting for erroneous operators: &&, ||, ++, --, ===
      (inspired by http://www.vim.org/tips/tip.php?tip_id=969, thanks
      Jeroen Ruigrok van der Werven for the link);
    - added highlighting for new 'with' statement and 'BaseException',
      'GeneratorExit' exceptions introduced in Python 2.5;
    - added highlighting for 'OverflowWarning' exception which had been
      forgotten;
    - returned more robust recognition for function names;

Revision 2.5.3:

    - fixed %-formatting highlighting for raw unicode strings;

Revision 2.5.2:

    - slightly simplified option handling;
    - fixed regexp for indentation errors;
    - fixed highlighting for backslashed symbols inside strings;
    - added highlighting for trailing-space errors (triggered by new
      option: python_highlight_space_errors);
    - added highlighting for variable name errors;
    - added highlighting for hex number errors;

Revision 2.5.1 (2005-03-13):

    - added new builtins 'all' and 'any' (Python 2.5a0)

Revision 2.4.2 (2004-08-05):

    - added highlighting for new @decorator syntax introduced in python 2.4a2

Revision 2.4.1 (2004-03-17):

    - new versioning scheme (based on python version numbers);
    - added highlighting for new types/builtins introduced in python 2.4
      (set, frozenset, reversed, sorted);
    - new option added: python_slow_sync (set this for slow but more
      robust syntax synchronization);
    - added highlighting for doctests;

Revision 1.19:

    - new option added: python_highlight_indent_errors;
    - python_highlight_all now not override previously set options,
      for example code:
          let python_highlight_indent_errors = 0
          let python_highlight_all = 1
      set all highlight options except indentation errors highlighting option;

Revision 1.17:

    - changed header, "Based on..." string added;

Revision 1.16:

    - added basestring builtin;

Revision 1.15 (first public revision).

    The changes since the original (vim6.1) python.vim are:

    - changed string highlighting;
    - enhanced special symbols highlighting inside strings;
    - enhanced constant numbers highlighting;
    - added optional highlighting for %-formatting inside strings;
    - added highlighting for error conditions (wrong symbols in source file,
      mixing spaces and tabs, wrong number values,
      wrong %-formatting inside strings);
    - added highlighting for magic comments: source code encoding
      and #! (executable) strings;
    - added highlighting for new exceptions and builtins introduced
      in python 2.3;
